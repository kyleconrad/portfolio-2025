---
const { content } = Astro.props;
---
<lottie-container>
    <div class="lottie__container">
        <link rel="prefetch" href={ content.lottieFile.url } />
        <canvas class="lottie__player" data-src={ content.lottieFile.url } data-loop={ content.loop } style={ `--aspect-ratio: ${ content.width } / ${ content.height };` }></canvas>
    </div>
</lottie-container>

<script>
    import { DotLottieWorker } from '@lottiefiles/dotlottie-web';

    class LottieContainer extends HTMLElement {
        constructor() {
            super();

            let     canvasState = {
                        paused: true,
                        played: false
                    }

            const   random = randomIntFromInterval( 1, 100 );

            const   canvas = this.querySelector<HTMLCanvasElement>( 'canvas' );

            const   src = canvas.dataset.src,
                    loop = ( canvas.dataset.loop === 'true' );

            //// Calculate 2/3 pixel ratio for smoother animations
            let     ratio = ( window.devicePixelRatio / 3 ) * 2;
            

            
            //// Initiate lottie player
            const dotLottie = new DotLottieWorker({
                canvas: canvas,
                src: src,
                autoplay: true,
                loop: loop,
                useFrameInterpolation: false,
                workerId: 'lottie-worker--' + random,
                renderConfig: {
                    freezeOnOffscreen: true,
                    autoResize: true,
                    devicePixelRatio: ratio
                }
            });



            //// Random number function
            function randomIntFromInterval( min, max ) {
                return Math.floor( Math.random() * ( max - min + 1 ) + min );
            }
        }
    }

    customElements.define( 'lottie-container', LottieContainer );
</script>